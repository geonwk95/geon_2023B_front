1. 각 문법/자료형 정의
2. 각 문법/자료형 형태/모양
3. 각 문법/자료형 활용 예시


===============================================
1.상수
모든 자료형을 저장하고 꺼내쓰기위해 쓰는 상자.
상수는 값을 변경할수없다.

선언할수있는 키워드는
 const

 const 명칭 = 블라블라

 상수.push(변수); // 상수에 변수를 추가함
상수.splice(1,1); //1번째 상수 1개를 삭제함
// ex1) 함수로 만든 return 값을 상수에 추가해서 저장할때
// function 상수추가용(){상수.push(1)}


2.변수                                              = day10 step2.js 참고
모든 자료형을 저장하고 꺼내쓰기위해 쓰는 상자.
상수와는 다르게 값을 변경할수있다.

선언할수있는 키워드는
 let , var

 let을 쓰는게 좋아보임

 let 명칭 = 블라블라

 let 변수 = 3;
// ex1) 함수 내부에서 HTML에 등록할 값을 만들때 사용함
// document.querySelector('boby').innerHTML = 변수
// ex2) for문에서 반복될 문자를 지정함
// for(let A=0; A<3; A++){"반복될꺼"}

================================================
================================================
3.숫자
말 그대로 숫자형 자료 
컴퓨터는 멍청해서 문자열과 구분을 잘해야한다.
"999" : 문자
 999  : 숫자                                         = day09 step3.html 참고

숫자형 자료는 산술연산자와 많이 쓰임    
하지만 문자열 과 더하면 = +
연결연산자로 취급됨

const 숫자 = Number("2"); console.log(숫자); console.log("숫자타입="+typeof(숫자));
Number(변수); console.log(Number(변수));
parseInt(2.31); console.log(parseInt(2.31));
// ex1) 문자형으로 표현된 "1" 을 숫자형함수Number 사용해 변환후 사용함
// const 숫자 = Number("2"); console.log(숫자);

================================================
4.문자열
같은 문자들의 집합
'하이' , "하이" 따옴표들이 붙어 있으면 문자열자료형
그러나 따옴표도 주의깊게 사용해야한다. 
문자 내부에 '' 사용하면 외부는 "" 이것만 잘지키면 굳    = day09 step3.html 참고

*문자열 길이*
"자바스크립트".length // 6
공백도 문자이니 조심

const 문자 = String(123124); console.log(문자); console.log("문자타입="+typeof(문자));
// ex1) 숫자형으로 표현된 1 을 문자형함수string 사용해 변환후 사용함
// ex2) 사용자의 ID가 숫자로만 이루어져서 문자열로 변경함
// let A유저아이디 = 1234; console.log(String(A유저아이디));

================================================
5.불
참 과 거짓 값을 표현할때 사용하는 자료형
true 와 false 가 있다.

*비교연산자/관계연산자 와 많이쓰임

비교연산자
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
>초과/크다          <미만/작다                         = day10 step1.js 참고
>=이상/크거나같다    <=이하/작거나같다
==같다[데이터비교]   ===같다[데이터/자료형 강력비교]    
!=같지않다          !==같지않다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
관계연산자
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
&& 이면서 면서 이고 모두 그리고 and조건
|| 이거나 거나 또는 하나라도 or조건

const 불 = 1>0; console.log(불); console.log("불타입="+typeof(불))
// ex1) if문에 주로 사용됨
// if(불){console.log("항상참이여서 실행")}else{""}

================================================
6.배열 = []
여러 자료를 묶어서 사용하는 특수한 자료형
- let 변수/상수명 = [ 요소 , 요소 , 요소 ]
*[ ] 대괄호 

배열 뒷부분에 요소 추가하기 
- 마지막 삽입
배열.push( 추가할요소 );     
                                                        == day12 step2.js 참고
- 중간(특정위치) 삽입
배열.splice( 중간삽입할 요소의 인덱스위치 , 0 , 추가할 요소의 값 )

배열내 특정 값의 위치 찾기
배열.indexOf( 값 ); 
- 배열내 동일한 값이 있으면 인덱스번호 반환 없으면 -1

const 배열 = [1,2,3]; console.log("배열타입="+typeof(배열));
// ex1) 함수로 안에서 만들어진값을 전역변수에 추가시킴
// ex2) 고객이름을 "배열.push(고객이름)" 배열에 추가함


================================================
7.함수 = function(){ }
함수는 코드의 집합을 나타내는 자료형
*function(){ }

- 용어
- 함수호출 : 함수를 사용할때. f(x)
- 매개변수 : 함수호출할때 함수내부{}에 여러가지 자료를 넣을때 = 인수
- 리턴값   : 함수호출해서 최종적으로 나오는 결과 = 반환 retirn
- void : 없다.

- 1. 익명함수 : 이름이 없는 함수.                           == day15 전부다 참고
- function(){}       : 함수에 이름이 없어서 호출이 불가능
- 익명함수를 변수/상수에 넣자.. 그럼 변수/.상수 호출시 함수가 실행.
- const 함수명 = function(){ }

- 2. 선언적함수 : 이름이 있는 함수.
- function 함수명(){}  : 함수에 이름이 있는 상태

function 함수(){}; console.log("함수타입="+typeof(함수));
// ex1) 종료시간 - 시작시간 해서 사용시간 을 구함

let 시작시간 = "10:00"; let 종료시간 = "11:00"
function 시간계산(){
let 계산 = Number(시작시간.split(":")[0]*60)+Number(종료시간.split(":")[1])
}



================================================
8.객체 = {}
특정 대상에 대한 정보를 정보별로 이름표 붙여서 정보를 저장한 틀
- *key/키 : 식별용 이므로 '주로 문자열' [ *중복불가능 ]     == day16 step2.js 참고
- value/값 : 실제데이터 이므로 모든 자료형
- 형태  { key:value , key:value , key:value }
-속성은 , 쉼표 구분

// - 특정 대상에 대한 정보를 정보별로 이름표 붙여서 정보를 저장한 틀
const 객체 = {}; console.log("객체타입="+typeof(객체));
// ex1) 체력검정 정보들을 하나의 객체에 저장함.
/* const 객체1 = {이름:전승호, 윗몸일으키기 : 5, 팔굽혀펴기 : 5}
*/
